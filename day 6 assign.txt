Q1)
#!/bin/bash
Read -p “Enter a number of the power: “ n
x=2
echo $x
for((i=1;i<=n-1;i++))
do
x=$((x*2))
echo$x
done

Sol:
 ./demo2.sh
Enter the valueof power n: 5
2
4
8
16
32

Q2)
echo Enter a number
read n
i=1
sum=0
while [ $i -le $n ]
do
sum=`expr $sum + \( 10000 / $i \)`
i=`expr $i + 1`
done
echo Sum n series is
i=1
while [ $i -le 5 ]
do
a=`echo $sum | cut -c $i`
echo -e "$a\c"
if [ $i -eq 1 ]
then
echo -e ".\c"
fi
i=`expr $i + 1`

done
echo

sol)
Enter a number
2
Sum n series is
1.5000

Enter a number
4
Sum n series is
2.0833

Q.3
#!/bin/bash
echo -e "Enter Number:"
read n
for((i=2; i<=$n/2; i++))
do
        ans=$((n%i))
        if [ $ans -eq 0 ]
        then
          echo "$n is not a prime number."
          exit 0
        fi
done
echo "$n is a prime number."

O/P:-
$ ./prime.sh
Enter Number:
17
17 is a prime number.

$ ./prime.sh
Enter Number:
36
36 is not a prime number.

Q4.
echo "Enter the range of numbers"
read n1
read n2
echo "range of numbers is from $n1 to $n2"
for((i=n1;i<=n2;i++))
do
        counter=0
        for((j=n2;j>=2;j--))
        do
           ans=$(($i%$j))
           if [ $ans -eq 0 ]
           then
              counter=`expr  $counter = 1`
           fi
        done
        if [ $counter -eq 1 ]
        then
           echo $i
        fi
done
 Ans:
Enter the range of numbers
5
15
range of numbers is from 5 to 15
5 7 11 13 


Q.5
echo "Enter a number"
read n
fact=1
for((i=2;i<=n;i++))
do
        fact=$(($fact*$i))
done
echo "Result $fact"

O/P:-
$ ./fact.sh
Enter a number
4
Result 24









Q6.

echo "enter number"
read n
for((i=1;i<n;i++))
do
    res=$(($i*$i))
    if [ $res -eq $n ]
    then
        echo "$i prime factor for $n."
        exit 0
    fi
done
echo "$n dont have a prime factor"
O/P:-
enter number
64
8 prime factors for 64.

enter number
23
23 don't have a prime factor


Q7):

#!/bin/bash
read -p "Enter a number of the power:" n
x=2
i=1
if [ $n -le 8 ]
then
echo "2"
while [ $i -ne $n ]
do
x=$(($x*2))
((i++))
echo $x
done
else
echo "invalid input: "
fi


Sol: 
1)
Enter a number of the power:6
2
4
8
16
32
64
2)
Enter a number of the power:9
invalid input:


Q9)
counterh=0
counter=0
while [[ ($counterh -le 10) && ($counter -le 10) ]]
do
        r=$((RANDOM%2))
        z=0
        if [ $r -eq $z ]
        then
                echo "head"
                ((counter++))
        else
                echo "tail"
                ((counter++))
        fi
done
                echo " heads count $counter"
                echo " tails count $counter"




sol)

tail
head
tail
head
head
tail
head
head
tail
tail
tail
tail
tail
tail
tail
tail
 heads count 5
 tails count 11


Q11. echo "*** Converting between the different temperature scales ***"
echo "1. Convert Celsius temperature into Fahrenheit"
echo "2. Convert Fahrenheit temperatures into Celsius"
echo -n "Select your choice (1-2) : "
read choice

if [ $choice -eq 1 ]
then
        echo -n "Enter temperature (C) : "
        read tc
        # formula Tf=(9/5)*Tc+32
        tf=$(echo "scale=2;((9/5) * $tc) + 32"|bc)
        echo "$tc C = $tf F"
elif [ $choice -eq 2 ]
then
        echo -n "Enter temperature (F) : "
        read tf
        # formula Tc=(5/9)*(Tf-32)
        tc=$(echo "scale=2;(5/9)*($tf-32)"|bc)
        echo "$tf = $tc"
else
        echo "Please select 1 or 2 only"
        exit 1
Fi

Q.12)










































































































































































































































































































































































































































































































































































































































































































































































































































































































































































    for i in $s
    do
        while [ "$i" -gt 0 ]
        do
            rem=$((i%10))
            rev=$((rev*10+rem))
            i=$((i / 10))
        done
    done

    if [[ $rev -eq $num1 && $rev -eq $num2 ]]
    then
        return 0
    else
        return 1
    fi
}

echo "Enter two number:"
read -r a
read -r b

for num in $a $b
do
    x="$x$sep$num"
    sep=" "
done

y="$x"
num1="$a"
num2="$b"
rem=""
rev=0
for word in $y;
do
    if checkPalindrome "$word"
    then
        echo "$word is palindrome"
    fi
done

O/P:-
$ ./palindrome.sh
Enter two number:
252
252
252 is palindrome



Function 
Q.3

echo "Enter number"
read n
function polin()
{

        m=$n
        sum=0
        while [ $n -gt 0 ]
        do

                r=$(($n%10))
                sum=$((($sum*10)+$r))
                n=$(($n/10))
        done

        if [ $m -eq $sum ]
        then
                echo "Polindram num : "$m
        else
                echo "Not a polindram "$m
        fi

}

function prime()
{
        count=0
        for((i=2;i<$n/2;i++))
        do
                no=$(($n%i))
                if [ $no -eq 0 ]
                then
                        count=$(($count+1))
                fi
        done
        if [ $count -gt 0 ]
        then
                echo "not a Prime no" $n
        else
                echo "prime no" $n
        fi
}

res1=$( polin $(($n)))
echo $res1

res2=$( prime $(($n)))
echo $res2

if [ $res1 -eq $res2 ]
then
        echo "Palindrome number is also prime"
else
        echo "Palindrome number is not a prime number"
fi


Output
Enter number
121
Polindram num : 121
not a Prime no 121
Palindrome number is not a prime number

Enter number
17
Not a polindram 17
prime no 17
Palindrome number is not a prime number



